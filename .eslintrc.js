module.exports = {
  env: {
    es6: true,
    node: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  extends: ['plugin:import/typescript'],
  plugins: [
    '@typescript-eslint',
    '@typescript-eslint/tslint',
    'prettier',
    'import',
    'prefer-arrow',
  ],
  rules: {
    'prettier/prettier': 'error',
    '@typescript-eslint/adjacent-overload-signatures': 'error',
    '@typescript-eslint/array-type': 'error',
    '@typescript-eslint/ban-types': 'error',
    // '@typescript-eslint/class-name-casing': 'error',
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/consistent-type-definitions': 'error',
    '@typescript-eslint/explicit-member-accessibility': [
      'off',
      {
        accessibility: 'explicit',
      },
    ],
    '@typescript-eslint/indent': ['error', 2],
    // '@typescript-eslint/interface-name-prefix': [
    //   'error',
    //   { prefixWithI: 'always' },
    // ],
    '@typescript-eslint/member-delimiter-style': [
      'error',
      {
        multiline: {
          delimiter: 'none',
          requireLast: true,
        },
        singleline: {
          delimiter: 'semi',
          requireLast: false,
        },
      },
    ],
    '@typescript-eslint/member-ordering': [
      'error',
      {
        default: [
          'static-field',
          'instance-field',
          'static-method',
          'instance-method',
        ],
      },
    ],
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-inferrable-types': 'error',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-namespace': 'error',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/no-parameter-properties': 'off',
    '@typescript-eslint/no-this-alias': 'error',
    // "@typescript-eslint/no-use-before-declare": "error",
    // "@typescript-eslint/no-var-requires": "error",
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-function-type': 'error',
    '@typescript-eslint/prefer-namespace-keyword': 'error',
    // '@typescript-eslint/quotes': ['error', 'single'],
    '@typescript-eslint/semi': ['error', 'never'],
    '@typescript-eslint/space-within-parens': ['off', 'never'],
    '@typescript-eslint/triple-slash-reference': 'error',
    '@typescript-eslint/type-annotation-spacing': 'error',
    '@typescript-eslint/unified-signatures': 'error',
    // "arrow-body-style": ["warn", "as-needed"],
    'arrow-parens': ['off', 'as-needed'],
    camelcase: 'off', // ['error', { properties: "never" }],
    // '@typescript-eslint/camelcase': ['error', { properties: 'never' }],
    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": "variableLike", "format": ["camelCase"] },
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["UPPER_CASE", "camelCase"]
      },
      {
        "selector": ["function"],
        "format": ["camelCase", "PascalCase"]
      }
    ],
    // "capitalized-comments": ["error", "never"],
    'comma-dangle': [
      'error',
      {
        objects: 'always-multiline',
        arrays: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        functions: 'never',
      },
    ],
    complexity: 'off',
    'constructor-super': 'error',
    curly: 'error',
    'dot-notation': 'off',
    'eol-last': 'error',
    eqeqeq: [1, 'smart'],
    'guard-for-in': 'error',
    'id-blacklist': 'off',
    'id-match': 'off',
    'import/no-deprecated': 'warn',
    'import/no-extraneous-dependencies': 'error',
    'import/no-internal-modules': [
      'off',
      {
        allow: ['**/core/*', '**/helper/*', '**/config/*', '**/interface/*'],
      },
    ],
    'import/order': [
      'error',
      {
        // "ignoreCase": true,
        alphabetize: {
          order:
            'asc' /* sort in ascending order. Options: ['ignore', 'asc', 'desc'] */,
        },
      },
    ],
    'linebreak-style': 'off',
    // 'lines-around-comment': ["error", {
    //   "beforeBlockComment": true
    // }],
    'lines-between-class-members': [
      'error',
      'always',
      {
        'exceptAfterSingleLine': true,
      },
    ],
    'max-classes-per-file': ['error', 1],
    'max-depth': [
      'error',
      {
        max: 4,
      },
    ],
    'max-lines': [
      'error',
      {
        max: 1000,
        skipBlankLines: true,
        skipComments: true,
      },
    ],
    'max-len': [
      'error',
      {
        code: 140,
      },
    ],
    'max-params': ['warn', 5],
    'max-statements': ['error', 360],
    'max-statements-per-line': ['error', { max: 3 }],
    'new-parens': 'off',
    'newline-per-chained-call': 'off',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-console': [
      'error',
      {
        allow: [
          'log',
          'warn',
          'dir',
          'timeLog',
          'assert',
          'clear',
          'count',
          'countReset',
          'group',
          'groupEnd',
          'table',
          'dirxml',
          'error',
          'groupCollapsed',
          'Console',
          'profile',
          'profileEnd',
          'timeStamp',
          'context',
        ],
      },
    ],
    'no-constant-condition': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-else-return': 'warn',
    'no-empty': 'off',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-parens': 'off',
    'no-extra-semi': 'error',
    'no-fallthrough': 'error',
    'no-invalid-this': 'off',
    'no-irregular-whitespace': 'off',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': 'off',
    'no-multiple-empty-lines': 'error',
    'no-multi-spaces': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-param-reassign': 'error',
    'no-redeclare': ['error', { builtinGlobals: true }],
    'no-return-await': 'error',
    'no-sequences': 'error',
    'no-shadow': [
      'error',
      {
        hoist: 'all',
      },
    ],
    'no-self-compare': 'error',
    'no-sparse-arrays': 'error',
    'no-shadow-restricted-names': 'error',
    'no-template-curly-in-string': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-unexpected-multiline': 'error',
    'no-undef': 'error',
    'no-undef-init': 'error',
    'no-undefined': 'error',
    'no-underscore-dangle': 'error',
    'no-unsafe-finally': 'error',
    'no-unused-labels': 'error',
    // "no-unused-vars": "warn", // TS 无法使用
    'no-unreachable': 'error',
    'no-use-before-define': [1, 'nofunc'],
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
      },
    ],
    'no-var': 'error',
    'no-return-assign': ['error', 'always'],
    'key-spacing': [
      'error',
      {
        beforeColon: false,
        afterColon: true,
        mode: 'strict',
      },
    ],
    'comma-spacing': [
      'error',
      {
        before: false,
        after: true,
      },
    ],
    'object-shorthand': 'error',
    'one-var': ['error', 'never'],
    // "prefer-arrow/prefer-arrow-functions": "error",
    'prefer-const': 'error',
    'prefer-object-spread': 'error',
    'quote-props': 'off',
    radix: 'error',
    'no-useless-call': 0,
    'no-useless-concat': 2,
    'no-void': 2,
    'no-with': 2,
    'no-mixed-spaces-and-tabs': 2,
    'comma-style': ['error', 'last'],
    'block-spacing': ['error', 'always'],
    'object-curly-spacing': ['error', 'always'],
    'array-bracket-spacing': [1, 'never'],
    'space-before-function-paren': [
      'error',
      {
        anonymous: 'never',
        named: 'never',
      },
    ],
    'spaced-comment': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'off',
    '@typescript-eslint/tslint/config': [
      'error',
      {
        rules: {
          'component-class-suffix': true,
          'directive-class-suffix': true,
          'import-blacklist': [true, 'rxjs/Rx'],
          'import-spacing': true,
          'jsdoc-format': [true, 'check-multiline-start'],
          'no-input-rename': true,
          'no-output-on-prefix': true,
          'no-output-rename': true,
          'no-redundant-jsdoc': true,
          'no-reference-import': true,
          'one-line': [
            true,
            'check-open-brace',
            'check-catch',
            'check-else',
            'check-whitespace',
          ],
          'prefer-conditional-expression': true,
          prettier: true,
          'use-host-property-decorator': true,
          'use-input-property-decorator': true,
          'use-life-cycle-interface': true,
          'use-output-property-decorator': true,
          'use-pipe-transform-interface': true,
          whitespace: [
            true,
            'check-branch',
            'check-decl',
            'check-operator',
            'check-separator',
            'check-type',
          ],
        },
      },
    ],
  },
}
